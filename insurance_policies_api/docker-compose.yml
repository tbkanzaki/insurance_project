version: '3.9'

services:
  postgres:
    image: postgres
    container_name: postgres-api
    env_file:
      - .env
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - insurance_app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - insurance_app_network

  web-api:
    container_name: web-api
    image: 'ruby:3.2.2'
    working_dir: /app
    volumes:
      - .:/app
      - ruby_gems:/usr/local/bundle
    env_file:
      - .env
    ports:
      - "5000:5000"
    healthcheck:
      test: curl -f http://localhost:5000/up
      interval: 10m
      timeout: 20s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: bash -c "rm -f tmp/pids/server.pid && bin/setup && bundle exec rails s -p 5000 -b '0.0.0.0'"
    networks:
      - insurance_app_network

  bunny-consumer:
    container_name: bunny-consumer
    image: 'ruby:3.2.2'
    working_dir: /app
    volumes:
      - .:/app
      - ruby_gems:/usr/local/bundle
    env_file:
      - .env
    depends_on:
      - web-api
    command: bash -c "bundle exec rake policy_consumer:start"
    networks:
      - insurance_app_network

volumes:
  ruby_gems:
  pgdata:

networks:
  insurance_app_network:
      